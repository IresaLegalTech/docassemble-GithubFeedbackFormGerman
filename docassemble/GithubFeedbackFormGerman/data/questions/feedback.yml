---
objects:
  userdata: DAStore
---
modules:
  - .github_issue
  - .feedback_on_server
---
metadata:
  title: User Feedback
---
features:
  labels above fields: True
  question back button: True
---
code: |
  # This email will be used ONLY if there is no valid GitHub config
  al_error_email = get_config('error notification email')
---
id: interview order
mandatory: True
code: |
  intro
  issue_template = generic_report[reason]
  send_to_github
  prevent_going_back()
  store_variables_snapshot(persistent=True)
  end_results
---
image sets:
  freepik:
    attribution: |
      Icon made by [Freepik](http://www.flaticon.com/authors/freepik)
    images:
      opinion: opinion.svg
      bug: bug.svg
      confusion: confusion.svg
      lifebuoy: lifebuoy.svg
      love: love.svg
      enhancement: enhance.svg
---
code: default_repository = 'docassemble-IresaDefault'
---
code: |
  default_github_user_or_organization = get_config('github issues',{}).get('default repository owner') or 'meinrecht'
---
code: server_share_answers = get_config("github issues", {}).get("feedback session linking", False)
---
code: server_ask_panel = get_config("github issues", {}).get("ask panel", False)
---
code: github_user = url_args.get('github_user', default_github_user_or_organization) or "suffolklitlab-issues"
---
code: github_repo = url_args.get('github_repo', default_repository) or "demo"
---
code: variable = url_args.get('variable')
---
code: question_id = url_args.get('question_id')
---
code: package_version = url_args.get('package_version')
---
code: filename = url_args.get('filename')
---
code: orig_session_id = url_args.get('session_id')
---
id: intro
decoration: opinion
question: |
  Feedback zur aktuellen Frage
subquestion: |
  Hier kannst du angeben, was du an der aktuellen Frage, den vorgeschlagenen Antworten
  oder dem Kontext, in dem sie auftaucht, verbesserungswürdig findest.
  
  Danke für deine Hilfe!

fields:
  - "**Wovon möchtest du uns erzählen?**": reason
    input type: radio
    choices:
      - Fehler: bug
      - Sprachliche Korrektur: language
      - Ich habe eine andere Anmerkung: something
  - "**Was möchtest du uns mitteilen?**": details
    rows: 4
    input type: area
continue button field: intro
---
id: end_results
event: end_results
question: |
  Danke für dein Feedback
decoration: opinion
subquestion: |  
  Bitte verlasse dieses Interview, indem du den Exitknopf betätigst. 
  
  Danach gelangst du in das Originalinterview und kannst es fortsetzen.
  
buttons:
  - Feedback schließen: exit
    url: ${ userdata.get("interview_url_orig") }
---
objects:
  - generic_report: DADict
---
template: generic_report[i]
subject: |
  % if question_id:
  ID ${ question_id }: 
  % endif
  User feedback: ${i}
  % if variable:
  (`${ variable }`)
  % endif
content: |
  &nbsp; | &nbsp;
  -------|------------------------------------
  % if question_id:
  Question ID | `${ question_id }`
  % endif
  Details | ${ details }
  % if variable:
  Variable being sought | `${ variable }`
  % endif
  % if package_version:
  Package version | `${ package_version }`
  % endif
  % if filename:
  Filename | `${ filename }`
  % endif
---
########################## Send to GitHub code ##########################
need:
  - question_id
  - variable
  - package_version
  - filename
code: |
  if not task_performed('sent to github', persistent=True):
    if actually_share_answers:
      saved_uuid
    issue_url
    if issue_url:
      if actually_share_answers and saved_uuid:
        set_feedback_github_url(saved_uuid, issue_url)
    else:
      al_error_email
      log(f"This form was not able to add an issue on the {github_user}/{github_repo} repo. Check your config.")
      if al_error_email and not is_likely_spam(issue_template.content):
        log(f"Unable to create issue on repo {github_repo}, falling back to emailing {al_error_email}")
        send_email(to=al_error_email, subject=f"{github_repo} - {issue_template.subject_as_html(trim=True)}", template=issue_template)
      else:
        log(f"~~~USER FEEDBACK~~~ {github_repo} -{issue_template.subject_as_html(trim=True)} - {issue_template.content_as_html(trim=True)}")
    mark_task_as_performed('sent to github', persistent=True)
  else:
    log("Already sent feedback to github from a feedback interview, not going to send again")
  send_to_github = True
---
code: |
  saved_uuid = save_feedback_info(interview=filename, session_id=orig_session_id, template=issue_template)
---
code: |
  issue_url = make_github_issue(github_user, github_repo, template=issue_template, label=al_github_label)
---
code: |
  actually_share_answers = server_share_answers and (get_config('debug'))
---
code: |
  al_github_label = 'user feedback'
